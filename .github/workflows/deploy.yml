name: Deploy to Docker Hub

on:
  push:
    branches:
      - master
  schedule:
    - cron: "0 5 * * 3"       # Weekly: Increment patch version

jobs:
  # linter:
  #   runs-on: ubuntu-latest
  #   steps:

  #     - uses: actions/checkout@v5

  #     - name: Lint Dockerfile
  #       uses: hadolint/hadolint-action@v3.3.0
  #       with:
  #         dockerfile: "docker/Dockerfile"
  #         ignore: DL3008, DL3016

  build-and-push:
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        node: [22.20.0, 24.8.0]

    steps:
    - name: Checkout code
      uses: actions/checkout@v5

    - name: Extract major.minor
      id: major-minor
      run: |
        NODE_MAJORMINOR=$(echo "${{ matrix.node }}" | cut -d. -f1-2)
        echo "NODE_VERSION=$NODE_MAJORMINOR" >> $GITHUB_OUTPUT

    - name: Extract major
      id: major
      run: |
        NODE_MAJOR=$(echo "${{ matrix.node }}" | cut -d. -f1)
        echo "NODE_VERSION=$NODE_MAJOR" >> $GITHUB_OUTPUT

    - name: Docker meta
      id: meta
      uses: docker/metadata-action@v5
      with:
        images: ${{ secrets.DOCKERHUB_USERNAME }}/node-tools

    - name: Log in to Docker Hub
      uses: docker/login-action@v3
      with:
        username: ${{ secrets.DOCKERHUB_USERNAME }}
        password: ${{ secrets.DOCKERHUB_TOKEN }}

    - name: Set up QEMU
      uses: docker/setup-qemu-action@v3

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3

    - name: Build and push Docker image
      uses: docker/build-push-action@v6
      with:
        context: docker
        push: true
        platforms: linux/amd64,linux/arm64
        build-args: |
          NODE_VERSION=${{ matrix.node }}
        tags: |
          ${{ secrets.DOCKERHUB_USERNAME }}/node-tools:${{ matrix.node }}-alpine
          ${{ secrets.DOCKERHUB_USERNAME }}/node-tools:${{ steps.major-minor.outputs.NODE_VERSION }}-alpine
          ${{ secrets.DOCKERHUB_USERNAME }}/node-tools:${{ steps.major.outputs.NODE_VERSION }}-alpine
        labels: ${{ steps.meta.outputs.labels }}

    # - name: Run Trivy vulnerability scanner
    #   uses: aquasecurity/trivy-action@0.28.0
    #   with:
    #     image-ref: 'docker.io/${{ secrets.DOCKERHUB_USERNAME }}/node-tools:${{ matrix.node }}'
    #     format: 'table'
    #     exit-code: '1'
    #     ignore-unfixed: true
    #     vuln-type: 'os,library'
    #     severity: 'CRITICAL,HIGH'
